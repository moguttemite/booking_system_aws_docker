# 开发环境Dockerfile
FROM node:18-alpine

# 安装pnpm
RUN npm install -g pnpm

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apk add --no-cache libc6-compat

# 复制包管理文件
COPY nextjs/package.json nextjs/pnpm-lock.yaml* nextjs/pnpm-workspace.yaml* ./

# 安装依赖
RUN pnpm install

# 复制源代码（排除node_modules）
COPY nextjs/app ./app
COPY nextjs/components ./components
COPY nextjs/lib ./lib
COPY nextjs/public ./public
COPY nextjs/next.config.ts ./
COPY nextjs/tsconfig.json ./
COPY nextjs/eslint.config.mjs ./
COPY nextjs/.eslintrc.json ./
COPY nextjs/next-env.d.ts ./
COPY nextjs/package.json ./

# 创建非root用户
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# 设置权限
RUN chown -R nextjs:nodejs /app
USER nextjs

# 暴露端口
EXPOSE 3000

ENV PORT 3000
ENV HOSTNAME "0.0.0.0"
ENV NODE_ENV development

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD node -e "require('http').get('http://localhost:3000', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })" || exit 1

# 启动开发服务器
CMD ["pnpm", "run", "dev"]
